{
  "v": "1",
  "id": "f9c182a5-773a-4a67-a87e-60d80a0d2c03",
  "rev": 2,
  "name": "Veilid",
  "summary": "Single glass of pain for veilid-server 0.3.0",
  "description": "Processing pipeline and simple dashboard for monitoring Veilid debug logs. This is just a first attempt and is definitely not handling all possible debug logs, just the stuff that I saw over the course of a day.",
  "vendor": "BourbonInExile",
  "url": "https://twitter.com/BourbonInExile/",
  "parameters": [],
  "entities": [
    {
      "v": "1",
      "type": {
        "name": "dashboard",
        "version": "2"
      },
      "id": "c5bf59bc-0cfb-40d7-8606-3d19d3371d4e",
      "data": {
        "summary": {
          "@type": "string",
          "@value": ""
        },
        "search": {
          "queries": [
            {
              "id": "7caa0333-c4c5-4081-a2f3-182d8d571cf7",
              "timerange": {
                "from": 300,
                "type": "relative"
              },
              "filters": [],
              "query": {
                "type": "elasticsearch",
                "query_string": ""
              },
              "search_types": [
                {
                  "query": {
                    "type": "elasticsearch",
                    "query_string": "event_source_product: veilid-server AND _exists_: vendor_event_category"
                  },
                  "name": "chart",
                  "timerange": {
                    "from": 86400,
                    "type": "relative"
                  },
                  "column_limit": null,
                  "streams": [],
                  "row_limit": null,
                  "series": [
                    {
                      "type": "count",
                      "id": "Count",
                      "field": "vendor_event_category"
                    }
                  ],
                  "filter": null,
                  "rollup": true,
                  "row_groups": [
                    {
                      "type": "values",
                      "fields": [
                        "vendor_event_category"
                      ],
                      "limit": 15,
                      "skip_empty_values": false
                    },
                    {
                      "type": "values",
                      "fields": [
                        "vendor_event_action"
                      ],
                      "limit": 15,
                      "skip_empty_values": false
                    }
                  ],
                  "type": "pivot",
                  "id": "dccde0cd-fca1-4079-ba42-68b16c7507b4",
                  "filters": [],
                  "column_groups": [],
                  "sort": [
                    {
                      "type": "series",
                      "field": "count(vendor_event_category)",
                      "direction": "Descending"
                    }
                  ]
                },
                {
                  "query": {
                    "type": "elasticsearch",
                    "query_string": "event_source_product: veilid-server AND _exists_: vendor_event_category"
                  },
                  "name": "chart",
                  "timerange": {
                    "from": 86400,
                    "type": "relative"
                  },
                  "column_limit": null,
                  "streams": [],
                  "row_limit": null,
                  "series": [
                    {
                      "type": "count",
                      "id": "Count",
                      "field": "vendor_event_action"
                    }
                  ],
                  "filter": null,
                  "rollup": false,
                  "row_groups": [
                    {
                      "type": "values",
                      "fields": [
                        "vendor_event_category",
                        "vendor_event_action"
                      ],
                      "limit": 15,
                      "skip_empty_values": false
                    }
                  ],
                  "type": "pivot",
                  "id": "cf131070-eb1e-43a7-8f15-181c4b815342",
                  "filters": [],
                  "column_groups": [
                    {
                      "type": "values",
                      "fields": [
                        "source"
                      ],
                      "limit": 15,
                      "skip_empty_values": false
                    }
                  ],
                  "sort": []
                },
                {
                  "query": {
                    "type": "elasticsearch",
                    "query_string": "event_source_product: veilid-server"
                  },
                  "name": null,
                  "timerange": {
                    "from": 300,
                    "type": "relative"
                  },
                  "offset": 0,
                  "streams": [],
                  "filter": null,
                  "decorators": [],
                  "type": "messages",
                  "id": "e6e54058-0717-4a08-9160-2e28e76d173d",
                  "limit": 150,
                  "filters": []
                }
              ]
            }
          ],
          "parameters": [],
          "requires": {},
          "owner": "admin",
          "created_at": "2024-03-29T21:13:53.368Z"
        },
        "created_at": "2024-03-29T21:08:24.469Z",
        "requires": {},
        "state": {
          "7caa0333-c4c5-4081-a2f3-182d8d571cf7": {
            "selected_fields": null,
            "static_message_list_id": null,
            "titles": {
              "tab": {
                "title": "Overview"
              }
            },
            "widgets": [
              {
                "id": "196e6ffe-f60b-4e90-a4bf-8cd64be514fa",
                "type": "messages",
                "filter": null,
                "filters": [],
                "timerange": {
                  "from": 300,
                  "type": "relative"
                },
                "query": {
                  "type": "elasticsearch",
                  "query_string": "event_source_product: veilid-server"
                },
                "streams": [],
                "config": {
                  "fields": [
                    "timestamp",
                    "source",
                    "vendor_event_severity",
                    "vendor_event_category",
                    "vendor_event_action",
                    "message"
                  ],
                  "show_message_row": false,
                  "show_summary": false,
                  "decorators": [],
                  "sort": [
                    {
                      "type": "pivot",
                      "field": "timestamp",
                      "direction": "Descending"
                    }
                  ]
                }
              },
              {
                "id": "590da1ff-24e9-4513-ba0c-8df7fbff12b7",
                "type": "aggregation",
                "filter": null,
                "filters": [],
                "timerange": {
                  "from": 86400,
                  "type": "relative"
                },
                "query": {
                  "type": "elasticsearch",
                  "query_string": "event_source_product: veilid-server AND _exists_: vendor_event_category"
                },
                "streams": [],
                "config": {
                  "visualization": "bar",
                  "column_limit": 15,
                  "event_annotation": false,
                  "row_limit": 15,
                  "row_pivots": [
                    {
                      "fields": [
                        "vendor_event_category",
                        "vendor_event_action"
                      ],
                      "type": "values",
                      "config": {
                        "limit": 15
                      }
                    }
                  ],
                  "series": [
                    {
                      "config": {
                        "name": "Count"
                      },
                      "function": "count(vendor_event_action)"
                    }
                  ],
                  "rollup": false,
                  "column_pivots": [
                    {
                      "fields": [
                        "source"
                      ],
                      "type": "values",
                      "config": {
                        "limit": 15
                      }
                    }
                  ],
                  "visualization_config": {
                    "barmode": "stack",
                    "axis_type": "linear"
                  },
                  "formatting_settings": null,
                  "sort": []
                }
              },
              {
                "id": "a562e93b-32c0-4541-93bb-2b0c2621d674",
                "type": "aggregation",
                "filter": null,
                "filters": [],
                "timerange": {
                  "from": 86400,
                  "type": "relative"
                },
                "query": {
                  "type": "elasticsearch",
                  "query_string": "event_source_product: veilid-server AND _exists_: vendor_event_category"
                },
                "streams": [],
                "config": {
                  "visualization": "table",
                  "column_limit": null,
                  "event_annotation": false,
                  "row_limit": 15,
                  "row_pivots": [
                    {
                      "fields": [
                        "vendor_event_category"
                      ],
                      "type": "values",
                      "config": {
                        "limit": 15
                      }
                    },
                    {
                      "fields": [
                        "vendor_event_action"
                      ],
                      "type": "values",
                      "config": {
                        "limit": 15
                      }
                    }
                  ],
                  "series": [
                    {
                      "config": {
                        "name": "Count"
                      },
                      "function": "count(vendor_event_category)"
                    }
                  ],
                  "rollup": false,
                  "column_pivots": [],
                  "visualization_config": {
                    "pinned_columns": []
                  },
                  "formatting_settings": null,
                  "sort": [
                    {
                      "type": "series",
                      "field": "count(vendor_event_category)",
                      "direction": "Descending"
                    }
                  ]
                }
              }
            ],
            "widget_mapping": {
              "a562e93b-32c0-4541-93bb-2b0c2621d674": [
                "dccde0cd-fca1-4079-ba42-68b16c7507b4"
              ],
              "590da1ff-24e9-4513-ba0c-8df7fbff12b7": [
                "cf131070-eb1e-43a7-8f15-181c4b815342"
              ],
              "196e6ffe-f60b-4e90-a4bf-8cd64be514fa": [
                "e6e54058-0717-4a08-9160-2e28e76d173d"
              ]
            },
            "positions": {
              "a562e93b-32c0-4541-93bb-2b0c2621d674": {
                "col": 1,
                "row": 1,
                "height": 4,
                "width": 4
              },
              "590da1ff-24e9-4513-ba0c-8df7fbff12b7": {
                "col": 5,
                "row": 1,
                "height": 4,
                "width": 8
              },
              "196e6ffe-f60b-4e90-a4bf-8cd64be514fa": {
                "col": 1,
                "row": 5,
                "height": 5,
                "width": "Infinity"
              }
            },
            "formatting": null,
            "display_mode_settings": {
              "positions": {}
            }
          }
        },
        "properties": [],
        "owner": "admin",
        "title": {
          "@type": "string",
          "@value": "Veilid"
        },
        "type": "DASHBOARD",
        "description": {
          "@type": "string",
          "@value": ""
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline",
        "version": "1"
      },
      "id": "3c89ef10-9dc2-47c9-9138-d752b161cc94",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Veilid Processing"
        },
        "description": {
          "@type": "string",
          "@value": "Process data coming from Veilid via Syslog"
        },
        "source": {
          "@type": "string",
          "@value": "pipeline \"Veilid Processing\"\nstage 0 match all\nrule \"Select Veilid Messages\"\nstage 20 match either\nrule \"Veilid Parse Bucket Kick\"\nrule \"Veilid Parse Connection Accepted\"\nrule \"Veilid Parse Connection Closed\"\nrule \"Veilid Parse Connection Protect\"\nrule \"Veilid Parse Dead Route Failed\"\nrule \"Veilid Parse Get or Create Connection Retry\"\nrule \"Veilid Parse LRU Kill\"\nrule \"Veilid Parse RPC Drop\"\nrule \"Veilid Parse RPC Get Value\"\nrule \"Veilid Parse RPC Inspect Value\"\nrule \"Veilid Parse RPC Lost\"\nrule \"Veilid Parse RPC Set Value\"\nrule \"Veilid Parse RPC Watch Value\"\nrule \"Veilid Parse Receipt\"\nrule \"Veilid Parse Routing Table Update\"\nrule \"Veilid Parse SingleShot Receipt\"\nrule \"Veilid Parse Timestamp Ahead/Behind\"\nrule \"Veilid Parse RPC Failure\"\nrule \"Veilid Parse No Protocol Handler\"\nrule \"Veilid Parse Get Peer Address Fail\"\nstage 10 match either\nrule \"Parse Syslog Log Level 0\"\nrule \"Parse Syslog Log Level 1\"\nrule \"Parse Syslog Log Level 2\"\nrule \"Parse Syslog Log Level 3\"\nrule \"Parse Syslog Log Level 4\"\nrule \"Parse Syslog Log Level 5\"\nrule \"Parse Syslog Log Level 6\"\nrule \"Parse Syslog Log Level 7\"\nrule \"Drop Syslog Facility Fields\"\nend"
        },
        "connected_streams": [
          {
            "@type": "string",
            "@value": "5ad4684f-3e56-40d7-8c0d-43fa5c672ef8"
          }
        ]
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "9edf8b53-1ec4-4e9e-91c7-0ebe5abe7c6b",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Veilid Parse RPC Set Value"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Veilid Parse RPC Set Value\"\nwhen\n    starts_with(to_string($message.message), \"IN <=== SetValueQ\")\nthen\n    set_field(\"vendor_event_category\", \"rpc\");\n    set_field(\"vendor_event_action\", \"set\");\n    set_fields(grok(\"IN <=== SetValueQ\\\\(%{GREEDYDATA:veilid_key} #{GREEDYDATA:veilid_subkey} len=%NUMBER:veilid_data_length} seq=%{DATA:veilid_seq} writer=%{GREEDYDATA:veilid_writer}\\\\) <== %{GREEDYDATA:veilid_sender_node_id}\", to_string($message.message), true));\nend\n"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "81bda91e-75d1-4614-a24a-ad85ca7a0897",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Select Veilid Messages"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Select Veilid Messages\"\nwhen\n    has_field(\"application_name\")\n    && to_string($message.application_name) == \"veilid-server\"\nthen\n    rename_field(\"application_name\", \"event_source_product\");\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "af3856af-d8d9-4ce8-928c-f1ec49bb4f3f",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Veilid Parse Get or Create Connection Retry"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Veilid Parse Get or Create Connection Retry\"\nwhen\n    starts_with(to_string($message.message), \"get_or_create_connection retries left\", true)\nthen\n    // https://gitlab.com/veilid/veilid/-/blob/main/veilid-core/src/network_manager/connection_manager.rs#L360\n    set_field(\"vendor_event_category\", \"connection\");\n    set_field(\"vendor_event_action\", \"retry\");\n    set_fields(grok(\"get_or_create_connection retries left: %{NUMBER:retries_left}\", to_string($message.message), true));\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "2ae3d0cb-ff87-4c9d-9f90-c542cfe7e0fc",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Parse Syslog Log Level 7"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Parse Syslog Log Level 7\"\nwhen\n    has_field(\"level\") && to_string($message.level) == \"7\"\nthen\n    set_field(\"vendor_event_severity\", \"debug\");\n    rename_field(\"level\", \"vendor_event_severity_level\");\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "da6ea62d-d13f-4149-9ff4-4913746b8754",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Parse Syslog Log Level 4"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Parse Syslog Log Level 4\"\nwhen\n    has_field(\"level\") && to_string($message.level) == \"4\"\nthen\n    set_field(\"vendor_event_severity\", \"medium\");\n    rename_field(\"level\", \"vendor_event_severity_level\");\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "9be21c7f-a14c-456c-a0a9-332d091ebd3e",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Veilid Parse RPC Inspect Value"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Veilid Parse RPC Inspect Value\"\nwhen\n    starts_with(to_string($message.message), \"IN <=== InspectValueQ\")\nthen\n    // https://gitlab.com/veilid/veilid/-/blob/main/veilid-core/src/rpc_processor/rpc_inspect_value.rs#L207\n    set_field(\"vendor_event_category\", \"rpc\");\n    set_field(\"vendor_event_action\", \"inspect\");\n    set_fields(grok(\"IN <=== InspectValueQ\\\\(%{GREEDYDATA:veilid_key} {GREEDYDATA:veilid_subkey}\\\\) <== %{GREEDYDATA:veilid_sender_node_id}\", to_string($message.message), true));\nend\n"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "761a1fa6-68fc-4627-aa4e-94fef1b07ca0",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Veilid Parse No Protocol Handler"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Veilid Parse No Protocol Handler\"\nwhen\n    starts_with(to_string($message.message), \"no protocol handler for connection from\")\nthen\n    // https://gitlab.com/veilid/veilid/-/blob/main/veilid-core/src/network_manager/native/network_tcp.rs#L221\n    set_field(\"vendor_event_category\", \"network\");\n    set_field(\"vendor_event_action\", \"drop\");\n    set_field(\"vendor_event_outcome\", \"failed\");\n    set_fields(grok(\"no protocol handler for connection from %{IPORHOST:remote_ip}:%{NUMBER:remote_port}\", to_string($message.message), true));\nend\n    "
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "182b38e9-cbc3-46d6-a0ac-b663576cb2d7",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Drop Syslog Facility Fields"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Drop Syslog Facility Fields\"\nwhen\n    has_field(\"facility\") && has_field(\"facility_num\")\nthen\n    remove_field(\"facility\");\n    remove_field(\"facility_num\");\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "060ee0bb-4781-45a8-873e-de3517ff70ad",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Veilid Parse Connection Closed"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Veilid Parse Connection Closed\"\nwhen\n    starts_with(to_string($message.message), \"Connection closed\", true)\nthen\n    set_field(\"vendor_event_category\", \"connection\");\n    set_field(\"vendor_event_action\", \"close\");\n    set_fields(grok(\"Connection closed from: %{IPORHOST:remote_ip}:%{NUMBER:remote_port} \\\\(%{WORD:network_transport}\\\\)\", to_string($message.message), true));\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "547022a1-2f05-489c-b25a-369d607cd282",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Veilid Parse Connection Protect"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Veilid Parse Connection Protect\"\nwhen\n    starts_with(to_string($message.message), \"== PROTECTING connection\")\nthen\n    set_field(\"vendor_event_category\", \"connection\");\n    set_field(\"vendor_event_action\", \"protect\");\n    set_fields(grok(\"== PROTECTING connection: %{NUMBER:veilid_connection_id} -> %{GREEDYDATA:veilid_conn_debug} for node %{GREEDYDATA:veilid_node_id}\", to_string($message.message), true));\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "57ed5c44-2dbf-4e34-99cb-ccb778cf126c",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Parse Syslog Log Level 3"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Parse Syslog Log Level 3\"\nwhen\n    has_field(\"level\") && to_string($message.level) == \"3\"\nthen\n    set_field(\"vendor_event_severity\", \"high\");\n    rename_field(\"level\", \"vendor_event_severity_level\");\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "c0121c20-1229-4c6a-aa12-39f3ea519877",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Veilid Parse LRU Kill"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Veilid Parse LRU Kill\"\nwhen\n    starts_with(to_string($message.message), \"== LRU kill connection\")\nthen\n    // https://gitlab.com/veilid/veilid/-/blob/main/veilid-core/src/network_manager/connection_manager.rs#L231\n    set_field(\"vendor_event_category\", \"connection\");\n    set_field(\"vendor_event_action\", \"kill\");\n    set_fields(grok(\"== LRU kill connection due to limit: %{GREEDYDATA:veilid_conn_debug}\", to_string($message.message), true));\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "994a1bf1-5b95-4f91-bd61-cd4ef62f2338",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Veilid Parse Timestamp Ahead/Behind"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Veilid Parse Timestamp Ahead/Behind\"\nwhen\n    starts_with(to_string($message.message), \"Timestamp behind\")\n    || starts_with(to_string($message.message), \"Timestamp ahead\")\nthen\n    // https://gitlab.com/veilid/veilid/-/blob/main/veilid-core/src/network_manager/mod.rs#L965\n    set_field(\"vendor_event_category\", \"time\");\n    set_field(\"vendor_event_action\", \"check\");\n    set_fields(grok(\"Timestamp %{WORD:vendor_event_outcome}: %{NUMBER:millis_behind}ms \\\\(%{WORD:network_transport}:%{IPORHOST:destination_ip}:%{NUMBER:destination_port}\\\\)\", to_string($message.message), true));\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "f37555ea-b610-4fae-b112-2f7e66b88f4c",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Parse Syslog Log Level 5"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Parse Syslog Log Level 5\"\nwhen\n    has_field(\"level\") && to_string($message.level) == \"5\"\nthen\n    set_field(\"vendor_event_severity\", \"low\");\n    rename_field(\"level\", \"vendor_event_severity_level\");\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "0eecc3db-e119-4e87-b5ef-26ab84e9cd7b",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Veilid Parse RPC Get Value"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Veilid Parse RPC Get Value\"\nwhen\n    starts_with(to_string($message.message), \"IN <=== GetValueQ\")\nthen\n    set_field(\"vendor_event_category\", \"rpc\");\n    set_field(\"vendor_event_action\", \"get\");\n    set_fields(grok(\"IN <=== GetValueQ\\\\(%{GREEDYDATA:veilid_key} #{GREEDYDATA:veilid_subkey}\\\\) <== %{GREEDYDATA:veilid_sender_node_id}\", to_string($message.message), true));\nend\n"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "c8322c7d-0ff8-4210-92ee-e70ba84e1c1e",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Parse Syslog Log Level 0"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Parse Syslog Log Level 0\"\nwhen\n    has_field(\"level\") && to_string($message.level) == \"0\"\nthen\n    set_field(\"vendor_event_severity\", \"emergency\");\n    rename_field(\"level\", \"vendor_event_severity_level\");\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "84440443-d3f9-4054-b61b-280c659b7d10",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Veilid Parse RPC Drop"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Veilid Parse RPC Drop\"\nwhen\n    starts_with(to_string($message.message), \"Dropping RPC Operation\")\nthen\n    set_field(\"vendor_event_category\", \"rpc\");\n    set_field(\"vendor_event_action\", \"drop\");\n    set_fields(grok(\"Dropping RPC Operation: \\\\[%{GREEDYDATA:vendor_event_outcome_reason}]\", to_string($message.message), true));\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "95905afe-8e77-410a-be64-f92cf84b5d67",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Veilid Parse RPC Failure"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Veilid Parse RPC Failure\"\nwhen\n    starts_with(to_string($message.message), \"couldn't process rpc message\")\nthen\n    // https://gitlab.com/veilid/veilid/-/blob/main/veilid-core/src/rpc_processor/mod.rs#L1697\n    set_field(\"vendor_event_category\", \"rpc\");\n    set_field(\"vendor_event_action\", \"process\");\n    set_field(\"vendor_event_outcome\", \"failed\");\n    set_fields(grok(\"couldn't process rpc message:%{GREEDYDATA:vendor_event_outcome_reason}\", to_string($message.message), true));\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "1e105ac9-d8eb-4204-9e4a-1ad164b6daad",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Veilid Parse Get Peer Address Fail"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Veilid Parse Get Peer Address Fail\"\nwhen\n    starts_with(to_string($message.message), \"failed to get peer address\")\nthen\n    // https://gitlab.com/veilid/veilid/-/blob/main/veilid-core/src/network_manager/native/network_tcp.rs#L117\n    set_field(\"vendor_event_category\", \"network\");\n    set_field(\"vendor_event_action\", \"resolve\");\n    set_field(\"vendor_event_outcome\", \"failed\");\n    set_fields(grok(\"failed to get peer address: %{GREEDYDATA:error_message}\", to_string($message.message), true));\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "6982d781-e844-4112-a030-7c25e813918f",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Veilid Parse RPC Watch Value"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Veilid Parse RPC Watch Value\"\nwhen\n    starts_with(to_string($message.message), \"IN <=== WatchValueQ\")\nthen\n    // https://gitlab.com/veilid/veilid/-/blob/main/veilid-core/src/rpc_processor/rpc_watch_value.rs#L235\n    set_field(\"vendor_event_category\", \"rpc\");\n    set_field(\"vendor_event_action\", \"watch\");\n    // set_fields(grok(\"IN <=== WatchValueQ\\\\(%{GREEDYDATA:veilid_key} #{GREEDYDATA:veilid_subkey}\\\\) <== %{GREEDYDATA:veilid_sender_node_id}\", to_string($message.message), true));\nend\n"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "f6152c1c-0efc-437a-8255-42c17318c6dd",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Parse Syslog Log Level 2"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Parse Syslog Log Level 2\"\nwhen\n    has_field(\"level\") && to_string($message.level) == \"2\"\nthen\n    set_field(\"vendor_event_severity\", \"critical\");\n    rename_field(\"level\", \"vendor_event_severity_level\");\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "820fe930-3582-41f3-8c82-faa8bfdf2ab9",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Veilid Parse Routing Table Update"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Veilid Parse Routing Table Update\"\nwhen\n    starts_with(to_string($message.message), \"Routing table now has\", true)\nthen\n    set_field(\"vendor_event_category\", \"routing\");\n    set_field(\"vendor_event_action\", \"update\");\n    set_fields(grok(\"Routing table now has %{NUMBER:veilid_routing_total_nodes} nodes, %{NUMBER:veilid_routing_live_nodes} live\", to_string($message.message), true));\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "2c7b49af-4079-4c31-949f-91f0fd5c7c34",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Veilid Parse SingleShot Receipt"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Veilid Parse SingleShot Receipt\"\nwhen\n    starts_with(to_string($message.message), \"== New SingleShot Receipt\")\nthen\n    set_field(\"vendor_event_category\", \"SingleShot\");\n    set_field(\"vendor_event_action\", \"receive\");\n    set_fields(grok(\"== New SingleShot Receipt %{GREEDYDATA:veilid_receipt_nonce}\", to_string($message.message), true));\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "b3f6d459-169d-4a79-b5c7-91cf7f32090a",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Veilid Parse Receipt"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Veilid Parse Receipt\"\nwhen\n    starts_with(to_string($message.message), \"<<== RECEIPT\")\nthen\n    // https://gitlab.com/veilid/veilid/-/blob/main/veilid-core/src/network_manager/receipt_manager.rs#L415\n    set_field(\"vendor_event_category\",\"rpc\");\n    set_field(\"vendor_event_action\", \"receive\");\n    set_fields(grok(\"<<== RECEIPT %{DATA:veilid_receipt_nonce} <- %{GREEDYDATA:veilid_receipt_details}\", to_string($message.message), true));\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "8a494d5f-52d2-4191-a12f-4044c00723ad",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Veilid Parse Connection Accepted"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Veilid Parse Connection Accepted\"\nwhen\n    starts_with(to_string($message.message), \"Connection accepted\", true)\nthen\n    set_field(\"vendor_event_category\", \"connection\");\n    set_field(\"vendor_event_action\", \"accept\");\n    set_fields(grok(\"Connection accepted from: %{IPORHOST:remote_ip}:%{NUMBER:remote_port} \\\\(%{WORD:network_transport}\\\\)\", to_string($message.message), true));\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "332f657c-5fbc-407a-9329-a354a6b624e6",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Parse Syslog Log Level 6"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Parse Syslog Log Level 6\"\nwhen\n    has_field(\"level\") && to_string($message.level) == \"6\"\nthen\n    set_field(\"vendor_event_severity\", \"informational\");\n    rename_field(\"level\", \"vendor_event_severity_level\");\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "1a3b8a01-7fbe-4964-bdd1-ebb4dddd2a5f",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Veilid Parse RPC Lost"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Veilid Parse RPC Lost\"\nwhen\n    starts_with(to_string($message.message), \"RPC Lost\")\nthen\n    set_field(\"vendor_event_category\", \"rpc\");\n    set_field(\"vendor_event_action\", \"lost\");\n    set_fields(grok(\"RPC Lost \\\\(%{GREEDYDATA:debug_string}\\\\): %{GREEDYDATA:vendor_event_outcome_reason}\", to_string($message.message), true));\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "8ba9de8b-25fc-435f-9164-cc977500eced",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Veilid Parse Dead Route Failed"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Veilid Parse Dead Route Failed\"\nwhen\n    starts_with(to_string($message.message), \"Dead route failed to test\")\nthen\n    // https://gitlab.com/veilid/veilid/-/blob/main/veilid-core/src/routing_table/tasks/private_route_management.rs#L166\n    set_field(\"vendor_event_category\", \"route\");\n    set_field(\"vendor_event_action\", \"test\");\n    set_field(\"vendor_event_outcome\", \"failed\");\n    set_fields(grok(\"Dead route failed to test: %{GREEDYDATA:veilid_route}\", to_string($message.message), true));\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "057c8af2-b5f5-4103-9937-d81713f416d7",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Parse Syslog Log Level 1"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Parse Syslog Log Level 1\"\nwhen\n    has_field(\"level\") && to_string($message.level) == \"1\"\nthen\n    set_field(\"vendor_event_severity\", \"alert\");\n    rename_field(\"level\", \"vendor_event_severity_level\");\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "3abc66ef-0859-4b18-9bc7-91f2c7046fa9",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Veilid Parse Bucket Kick"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Veilid Parse Bucket Kick\"\nwhen\n    starts_with(to_string($message.message), \"Bucket \")\nthen\n    set_field(\"vendor_event_category\", \"routing\");\n    set_field(\"vendor_event_action\", \"kick\");\n    set_fields(grok(\"Bucket %{DATA:veilid_bucket_crypto}:%{DATA:veilid_bucket_size} kicked Routing table now has %{NUMBER:veilid_routing_table_entries} nodes\", to_string($message.message), true));\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "stream_title",
        "version": "1"
      },
      "id": "5ad4684f-3e56-40d7-8c0d-43fa5c672ef8",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Default Stream"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=5.2.5+7eaa89d"
        }
      ]
    }
  ]
}